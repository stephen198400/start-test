/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as DashboardWebsiteImport } from './routes/_dashboard/website'
import { Route as DashboardTasksImport } from './routes/_dashboard/tasks'
import { Route as DashboardSettingsImport } from './routes/_dashboard/settings'
import { Route as DashboardProjectsImport } from './routes/_dashboard/projects'
import { Route as DashboardAdminImport } from './routes/_dashboard/admin'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardWebsiteRoute = DashboardWebsiteImport.update({
  id: '/website',
  path: '/website',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardTasksRoute = DashboardTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardProjectsRoute = DashboardProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/admin': {
      id: '/_dashboard/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/projects': {
      id: '/_dashboard/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof DashboardProjectsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/tasks': {
      id: '/_dashboard/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof DashboardTasksImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/website': {
      id: '/_dashboard/website'
      path: '/website'
      fullPath: '/website'
      preLoaderRoute: typeof DashboardWebsiteImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRoute
  DashboardProjectsRoute: typeof DashboardProjectsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardTasksRoute: typeof DashboardTasksRoute
  DashboardWebsiteRoute: typeof DashboardWebsiteRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRoute,
  DashboardProjectsRoute: DashboardProjectsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardTasksRoute: DashboardTasksRoute,
  DashboardWebsiteRoute: DashboardWebsiteRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/admin': typeof DashboardAdminRoute
  '/projects': typeof DashboardProjectsRoute
  '/settings': typeof DashboardSettingsRoute
  '/tasks': typeof DashboardTasksRoute
  '/website': typeof DashboardWebsiteRoute
  '/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/admin': typeof DashboardAdminRoute
  '/projects': typeof DashboardProjectsRoute
  '/settings': typeof DashboardSettingsRoute
  '/tasks': typeof DashboardTasksRoute
  '/website': typeof DashboardWebsiteRoute
  '/': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/admin': typeof DashboardAdminRoute
  '/_dashboard/projects': typeof DashboardProjectsRoute
  '/_dashboard/settings': typeof DashboardSettingsRoute
  '/_dashboard/tasks': typeof DashboardTasksRoute
  '/_dashboard/website': typeof DashboardWebsiteRoute
  '/_dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/projects'
    | '/settings'
    | '/tasks'
    | '/website'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/admin' | '/projects' | '/settings' | '/tasks' | '/website' | '/'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_dashboard/admin'
    | '/_dashboard/projects'
    | '/_dashboard/settings'
    | '/_dashboard/tasks'
    | '/_dashboard/website'
    | '/_dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/admin",
        "/_dashboard/projects",
        "/_dashboard/settings",
        "/_dashboard/tasks",
        "/_dashboard/website",
        "/_dashboard/"
      ]
    },
    "/_dashboard/admin": {
      "filePath": "_dashboard/admin.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/projects": {
      "filePath": "_dashboard/projects.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/settings": {
      "filePath": "_dashboard/settings.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/tasks": {
      "filePath": "_dashboard/tasks.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/website": {
      "filePath": "_dashboard/website.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
